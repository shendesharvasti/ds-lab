#include <stdio.h>

void merge(int a[], int left, int mid, int right) {
    int i, j, k;
    int n1 = mid - left + 1;
    int n2 = right - mid;

    int L[n1], R[n2];

    // Copy data to temp arrays
    for(i = 0; i < n1; i++)
        L[i] = a[left + i];
    for(j = 0; j < n2; j++)
        R[j] = a[mid + 1 + j];

    // Merge the temp arrays back into a[]
    i = 0;
    j = 0;
    k = left;

    while(i < n1 && j < n2) {
        if(L[i] <= R[j]) {
            a[k] = L[i];
            i++;
        } else {
            a[k] = R[j];
            j++;
        }
        k++;
    }

    // Copy remaining elements of L[]
    while(i < n1) {
        a[k] = L[i];
        i++;
        k++;
    }

    // Copy remaining elements of R[]
    while(j < n2) {
        a[k] = R[j];
        j++;
        k++;
    }
}

void mergeSort(int a[], int left, int right) {
    if(left < right) {
        int mid = left + (right - left) / 2;

        mergeSort(a, left, mid);
        mergeSort(a, mid + 1, right);

        merge(a, left, mid, right);
    }
}

int main() {
    int n, i;

    printf("Enter array size : ");
    scanf("%d", &n);

    int a[n];

    printf("Enter %d elements : ", n);
    for(i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }

    printf("Before sorting the elements are : ");
    for(i = 0; i < n; i++) {
        printf("%d ", a[i]);
    }
    printf("\n");

    mergeSort(a, 0, n - 1);

    printf("After sorting the elements are : ");
    for(i = 0; i < n; i++) {
        printf("%d ", a[i]);
    }
    printf("\n");

    return 0;
}